module(
    name = "rules_oci",
    repo_name = "com_github_datadog_rules_oci",
)

# 2024-05-08
bazel_dep(name = "aspect_bazel_lib", version = "2.7.3")

# 2024-12-04
bazel_dep(name = "aspect_rules_js", version = "2.1.2")

# 2024-12
bazel_dep(name = "aspect_rules_lint", version = "1.0.8")

# 2024-04-25
bazel_dep(name = "bazel_skylib", version = "1.6.1")

# 2024-08-01
bazel_dep(name = "gazelle", version = "0.38.0", repo_name = "bazel_gazelle")

# 2024-05-06
bazel_dep(name = "rules_go", version = "0.47.1", repo_name = "io_bazel_rules_go")

# 2024-11-06
bazel_dep(name = "rules_nodejs", version = "6.3.2")

# 2024-02-08
bazel_dep(name = "rules_pkg", version = "0.10.1")

# 2023-08-11
bazel_dep(name = "stardoc", version = "0.6.2")

# 2024-04-25
bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.6.1", dev_dependency = True)

# 2024-08-27
bazel_dep(name = "buildifier_prebuilt", version = "7.3.1", dev_dependency = True)

single_version_override(
    module_name = "bazel_skylib_gazelle_plugin",
    patch_strip = 2,
    patches = [
        "//third_party/com_github_bazelbuild_bazel-skylib:01-pr-535-support-resolve.patch",
    ],
)

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    name = "go_sdk",
    version = "1.22.5",
)
use_repo(go_sdk, "go_sdk")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_blakesmith_ar",
    "com_github_containerd_containerd",
    "com_github_docker_docker_credential_helpers",
    "com_github_mitchellh_go_homedir",
    "com_github_opencontainers_go_digest",
    "com_github_opencontainers_image_spec",
    "com_github_sirupsen_logrus",
    "com_github_stretchr_testify",
    "com_github_urfave_cli_v2",
)
go_deps.module_override(
    patch_strip = 1,
    patches = [
        "//third_party/com_github_containerd_containerd:EEESUPPORT-11240-logging-and-retries-for-oci-pull.patch",
    ],
    path = "github.com/containerd/containerd",
)

oci_pull = use_repo_rule("//oci:defs.bzl", "oci_pull")

oci_pull(
    name = "ubuntu_noble",
    # "noble" tag as of 2024-12-30
    digest = "sha256:80dd3c3b9c6cecb9f1667e9290b3bc61b78c2678c02cbdae5f0fea92cc6734ab",
    registry = "mirror.gcr.io",
    repository = "library/ubuntu",
)

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "16.14.2")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir $PWD install
use_repo(pnpm, "pnpm")
