load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")
load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//oci:toolchain.bzl", "oci_local_toolchain")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")

# gazelle:prefix github.com/DataDog/rules_oci
# gazelle:go_naming_convention go_default_library
# gazelle:lang go

bzl_library(
    name = "repositories",
    srcs = ["repositories.bzl"],
    visibility = ["//visibility:public"],
    deps = ["@bazel_gazelle//:deps"],
)

oci_local_toolchain(
    name = "oci_local_toolchain",
)

gazelle(
    name = "gazelle",
    gazelle = ":default_gazelle_binary",
)

gazelle_binary(
    name = "default_gazelle_binary",
    languages = DEFAULT_LANGUAGES + [
        "@bazel_skylib_gazelle_plugin//bzl",
    ],
)

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.work",
        "-to_macro=repositories.bzl%go_repositories",
        "-prune=true",
        "-build_file_proto_mode=disable",
    ],
    command = "update-repos",
)

alias(
    name = "go",
    actual = "@go_sdk//:bin/go",
)

write_source_files(
    name = "bootstrap",
    diff_test = False,
    executable = True,
    files = {
        "bin/ocitool-darwin-amd64": "//go/cmd/ocitool",
        "bin/ocitool-darwin-arm64": "//go/cmd/ocitool",
        "bin/ocitool-linux-amd64": "//go/cmd/ocitool",
        "bin/ocitool-linux-arm64": "//go/cmd/ocitool",
    },
)
