load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@buildifier_prebuilt//:rules.bzl", "buildifier", "buildifier_test")
load("@gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")
load("//oci:toolchain.bzl", "oci_local_toolchain")

# gazelle:prefix github.com/DataDog/rules_oci
# gazelle:go_naming_convention go_default_library
# gazelle:lang go

oci_local_toolchain(
    name = "oci_local_toolchain",
)

buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./.git/*",
        "./.ijwb/*",
    ],
    lint_mode = "warn",
    mode = "fix",
)

buildifier_test(
    name = "buildifier_test",
    exclude_patterns = [
        "./.git/*",
        "./.ijwb/*",
    ],
    lint_mode = "warn",
    no_sandbox = True,
    workspace = "//:WORKSPACE",
)

gazelle(
    name = "gazelle",
    gazelle = ":default_gazelle_binary",
)

gazelle_binary(
    name = "default_gazelle_binary",
    languages = DEFAULT_LANGUAGES + [
        "@bazel_skylib_gazelle_plugin//bzl",
    ],
)

alias(
    name = "go",
    actual = "@rules_go//go",
)

write_source_files(
    name = "bootstrap",
    diff_test = False,
    executable = True,
    files = {
        "bin/ocitool-darwin-amd64": "//go/cmd/ocitool",
        "bin/ocitool-darwin-arm64": "//go/cmd/ocitool",
        "bin/ocitool-linux-amd64": "//go/cmd/ocitool",
        "bin/ocitool-linux-arm64": "//go/cmd/ocitool",
    },
)
